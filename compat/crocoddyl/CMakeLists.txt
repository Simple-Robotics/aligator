set(INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include/compat/crocoddyl)

file(GLOB_RECURSE HEADERS
     ${INCLUDE_DIR}/*.hpp)
set(SOURCES)

if(ENABLE_TEMPLATE_INSTANTIATION)
  file(GLOB SOURCES_TEMPL
      ${PROJECT_SOURCE_DIR}/src/compat/crocoddyl/*.cpp)
  list(APPEND SOURCES ${SOURCES_TEMPL})

  file(GLOB HEADERS_TEMPL
      ${INCLUDE_DIR}/*.txx)
  list(APPEND HEADERS ${HEADERS_TEMPL})
endif()

message(STATUS "Compat module: headers ${HEADERS}")
message(STATUS "Compat module: sources ${SOURCES}")

ADD_PROJECT_DEPENDENCY(crocoddyl REQUIRED)

add_library(${CROC_COMPAT_LIB_NAME} SHARED ${HEADERS} ${SOURCES})
set_target_properties(${CROC_COMPAT_LIB_NAME}
  PROPERTIES
  LINKER_LANGUAGE CXX
  LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}
  VERSION ${PROJECT_VERSION})

target_link_libraries(${CROC_COMPAT_LIB_NAME} PUBLIC ${PROJECT_NAME} crocoddyl::crocoddyl)


install(FILES ${HEADERS}
        DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME}/compat/crocoddyl
        PERMISSIONS OWNER_READ GROUP_READ WORLD_READ OWNER_WRITE)

install(TARGETS ${CROC_COMPAT_LIB_NAME}
        EXPORT ${TARGETS_EXPORT_NAME}
        PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
        INCLUDES DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
