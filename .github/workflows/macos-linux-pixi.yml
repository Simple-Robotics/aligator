name: CI - OSX/Linux via Pixi

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'doc/**'
      - 'scripts/**'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '**.md'
      - 'CITATION.cff'
      - 'CITATIONS.bib'
  pull_request:
    paths-ignore:
      - 'doc/'
      - 'scripts/'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '**.md'
      - 'CITATION.cff'
      - 'CITATIONS.bib'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  aligator-pixi:
    name: ${{ matrix.os }} - Env ${{ matrix.environment }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_BASEDIR: "${GITHUB_WORKSPACE}"
      CCACHE_DIR: "${GITHUB_WORKSPACE}/.ccache"
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, macos-15-intel]
        environment: [all, all-py310]
        build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v4
      with:
        path: .ccache
        key: ccache-macos-linux-pixi-${{ matrix.os }}-${{ matrix.build_type }}-${{ github.sha }}
        restore-keys: ccache-macos-linux-pixi-${{ matrix.os }}-${{ matrix.build_type }}-

    - uses: prefix-dev/setup-pixi@v0.8.1
      with:
        cache: true
        environments: ${{ matrix.environment }}

    - name: Build aligator
      shell: bash -l {0}
      env:
        CMAKE_BUILD_PARALLEL_LEVEL: 4
        ALIGATOR_BUILD_TYPE: ${{ matrix.build_type }}
      run: |
        pixi run -e ${{ matrix.environment }} test

  check:
    name: check-macos-linux-pixi

    needs:
    - aligator-pixi

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
